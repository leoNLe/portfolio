{"version":3,"sources":["assets/hollywood.jpg","assets/weather.png","assets/webcrawler.jpg","assets/file_system.jpeg","assets/penguin.jpg","components/navbar/navbar.js","components/footer/footer.js","components/portfolio/portfolio.js","components/about/about.js","components/contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navbar","className","href","footer","Portfolio","target","rel","src","hollywood","alt","weather","webcrawler","fileSystemImg","About","penguin","Contact","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,iRCoB5BC,MAlBf,WACI,OACI,yBAAKC,UAAU,UACf,yBAAKA,UAAU,SAAf,gBAGA,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,GAAGC,KAAK,KAArB,SACA,uBAAGD,UAAU,GAAGC,KAAK,cAArB,eACA,uBAAGD,UAAU,GAAGC,KAAK,YAArB,cAEJ,yBAAKD,UAAU,gB,MCARE,MAXf,WACI,OACI,4BAAQF,UAAU,UACd,yBAAKA,UAAU,cACf,yBAAKA,UAAU,IACf,uBAAGA,UAAU,GAAGC,KAAK,MAArB,KAA6B,OAA7B,iB,0ECsCGE,MArCf,WAEI,OACI,yBAAKH,UAAU,4BACX,yBAAKA,UAAU,gBACP,0CAER,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,gBACX,uBAAGI,OAAO,SAASC,IAAI,sBAAsBJ,KAAK,+CAA+CD,UAAU,SACvG,yBAAKM,IAAKC,IAAWC,IAAI,SAE7B,wBAAIR,UAAU,mBAAd,uBAEJ,yBAAKA,UAAU,gBACX,uBAAGI,OAAO,SAASC,IAAI,sBAAsBJ,KAAK,oCAAoCD,UAAU,SAC5F,yBAAKM,IAAKG,IAASD,IAAI,MAAMR,UAAU,eAE3C,wBAAIA,UAAU,mBAAd,sBAEJ,yBAAKA,UAAU,iBACX,uBAAGI,OAAO,SAASC,IAAI,sBAAsBJ,KAAK,qDAAqDD,UAAU,SAC7G,yBAAKM,IAAKI,IAAYF,IAAI,SAE9B,wBAAIR,UAAU,+BAAd,eAEJ,yBAAKA,UAAU,gBACX,uBAAGI,OAAO,SAASC,IAAI,sBAAsBJ,KAAK,wCAAwCD,UAAW,SACjG,yBAAKM,IAAKK,IAAeH,IAAI,MAAOR,UAAU,eAElD,wBAAIA,UAAU,mBAAd,2B,uBCZLY,MAtBf,WAEE,OAEE,yBAAKZ,UAAU,mBACX,yBAAKA,UAAU,gBACP,yCAER,yBAAKA,UAAU,mBACX,yBAAKM,IAAKO,IAASL,IAAI,WAAWR,UAAU,mBAC5C,uBAAGA,UAAU,aACR,KADL,gmBCHGc,MATf,WAEI,OACI,qC,YCqBOC,MAdf,WACI,OACI,yBAAKf,UAAU,OACX,kBAAC,IAAD,CAAQgB,SAAUC,cACd,kBAAC,EAAD,MACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAAK,kBAAC,EAAD,MAAvB,KACA,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,IAAgC,kBAAC,EAAD,MAAhC,KACA,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,IAA8B,kBAAC,EAAD,MAA9B,KACJ,kBAAC,EAAD,SCRIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9f133d2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hollywood.016fafd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/weather.fc31313b.png\";","module.exports = __webpack_public_path__ + \"static/media/webcrawler.cadd60b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/file_system.15f61625.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/penguin.6d6e5088.jpg\";","import React from 'react';\nimport \"./navbar.css\";\nfunction navbar() {\n    return (\n        <nav className=\"navbar\">\n        <div className=\"brand\">Leo Nghia Le</div>\n      \n       \n        <div className=\"navbar-links\">\n            <a className=\"\" href=\"/\">About</a>\n            <a className=\"\" href=\"/portfolio\"> Portfolio </a>\n            <a className=\"\" href=\"/contact\"> Contact </a>\n        </div>\n        <div className=\"blank-bar\"></div>\n\n    </nav>\n    );\n\n}\n\nexport default navbar;","import React from 'react';\nimport \"./footer.css\"\nfunction footer() {\n    return (\n        <footer className=\"footer\">\n            <div className=\"blank-bar\"></div>\n            <nav className=\"\"> \n            <a className=\"\" href=\"!#\">  {'\\u00A9'} Copyright</a>\n            </nav>\n        </footer>\n    );\n}\n\nexport default footer;","import React from \"react\";\nimport hollywood from \"../../assets/hollywood.jpg\";\nimport weather from \"../../assets/weather.png\";\nimport webcrawler from \"../../assets/webcrawler.jpg\"\nimport fileSystemImg from \"../../assets/file_system.jpeg\";\n\nimport \"./portfolio.css\";\n\nfunction Portfolio(){\n\n    return (\n        <div className=\"main-container-portfolio\">\n            <div className=\"title-border\">\n                    <h3>Portfolio</h3>\n            </div>\n            <div className=\"projects-container\">\n                <div className=\"project-item\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/leoNLe/Hollywood-Holidays\" className=\"image\">\n                        <img src={hollywood} alt=\"Img\"/>\n                    </a>\n                    <h4 className=\"project-caption\">Hollywood Holidays</h4>\n                </div>\n                <div className=\"project-item\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/leoNLe/Weather\" className=\"image\">\n                        <img src={weather} alt=\"Img\" className=\"img-fluid\"/>\n                    </a>\n                    <h4 className=\"project-caption\">Weather Dashboard</h4>\n                </div>  \n                <div className=\" project-item\"> \n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/leoNLe/spacetime-crawler-master\" className=\"image\">\n                        <img src={webcrawler} alt=\"Img\"/>\n                    </a>\n                    <h4 className=\"project-caption text-center\">Webcrawler</h4>\n                </div>\n                <div className=\"project-item\" >\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/leoNLe/File_System\" className =\"image\">\n                        <img src={fileSystemImg} alt=\"Img\"  className=\"img-fluid\"/>\n                        </a>\n                    <h4 className=\"project-caption\"> Simple File System</h4>              \n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio;","import React from 'react';\nimport penguin from \"../../assets/penguin.jpg\";\nimport \"./about.css\";\n\nfunction About() {\n\n  return (\n\n    <div className=\"about-container\">\n        <div className=\"title-border\">    \n                <h3 >About Me</h3>\n        </div>\n        <div className=\"lower-container\">\n            <img src={penguin} alt=\"personal\" className=\"personal-image\"/> \n            <p className=\"statement\">\n                {\"\\t\"}Full-Stack Developer with a Computer Science degree and a Certificate in Full-Stack Web Development from UCI.\n                Skilled  in object-oriented programming, Javascript, HTML, CSS, and SQL. Experienced in popular web frameworks and libraries such as React, JQuery, and Bootstrap.\n                Previously applied expertise to build a movie website that displays searchable movies and their actors. Passionate about building efficient and responsive web-applications\n                with the most appropriate technologies. Enthusiastic to join an innovative team to leverage my skills in building great websites and promote company growth.\n            </p>    \n        </div>\n    </div>\n\n  );\n}\n\nexport default About;","import React from \"react\";\n\nfunction Contact(){\n\n    return (\n        <div>\n            dkd\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from \"./components/footer/footer\";\nimport Portfolio from './components/portfolio/portfolio.js';\nimport About from './components/about/about.js';\nimport Contact from \"./components/contact/contact.js\"\n\nimport './assets/utilities.css' \nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router basename={process.env.PUBLIC_URL}>\n                <Navbar />\n                    <Route exact path=\"/\" ><About/> </Route>\n                    <Route exact path=\"/portfolio\"> <Portfolio/> </Route>\n                    <Route exact path=\"/contact\"> <Contact/> </Route>\n                <Footer />\n            </Router>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}